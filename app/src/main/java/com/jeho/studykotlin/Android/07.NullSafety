


7. NullSafety
- Null에 대해서 안전하다
- 코틀린의 특징

- Null vs 0
    -> 0 : 휴지를 다 쓰고 휴지심만 남은 상태
    -> Null : 휴지심도 없는 상태, 존재하지 않는 상태, 모르는 상태

- Null 이 안전하지 않은 이유
    -> 0 + 10 = 10 (가능)
    -> Null + 10 = ? (NullPointExceptionError 발생)
    -> button.setOnClickListener (가능)
    -> null.setOnClickListener (NullPointExceptionError 발생)

- Null 을 처리하는 방법
    -> 자바와 같은 경우에는 아래와 같이 null 을 처리하는 경우를 적어준다
    -> if (number != null) {
        number = +10
    }

- 코틀린이 Null Safety 하기 위해서 사용하는 문법
    -> ? (Null 이 아니라면 이하 구문 실행)
    -> !! (Null 이 아님을 개발자가 보장한다)

- 사용방법
    -> button?.setOnClickListener
    -> ? 앞에 있는 것이 null 이 아니라면 뒤에 것을 실행하겠다
    -> button!!.setOnClickListener
    -> 최대한 사용하지 않는 것이 좋음

- Null 이 될 수 있는 타입
-> Int, Double, Float, Class (Null 이 될 수 없는 타입)
-> Int?, Double?, Float?, Class? (Null 이 될 수 있는 타입)
